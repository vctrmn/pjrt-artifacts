name: PJRT GPU library
on:
  push:
    tags:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
jobs:
  pjrt-osx-artifacts:
    strategy:
      matrix:
        pjrt:
          - target: cpu
            config: "--config=release_macos_base"
            artifact: bazel-bin/xla/pjrt/c/libpjrt_c_api_cpu_plugin.dylib
            runs_on: ["macos-12"]
            platform: darwin-amd64
            bazel_target: //xla/pjrt/c:pjrt_c_api_cpu_plugin
    #          - target: cpu
    #            config: "--config=release_macos_arm64"
    #            artifact: bazel-bin/xla/pjrt/c/libpjrt_c_api_cpu_plugin.dylib
    #            runs_on: ["self-hosted", "macOS"]
    #            platform: darwin-arm64
    #            bazel_target: //xla/pjrt/c:pjrt_c_api_cpu_plugin

    runs-on: ${{ matrix.pjrt.runs_on }}
    steps:
      - name: "Checking out openxla repository"
        uses: actions/checkout@v4
        with:
          repository: zml/xla
          ref: 97a3db78e4db918033d4f3c5934026c5f3c531e7

      - name: Setup Bazel
        if: ${{ contains(matrix.pjrt.runs_on, 'self-hosted') }} # Run only for self-hosted macOS
        run: |
          wget https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64 -O /usr/local/bin/bazel
          chmod +x /usr/local/bin/bazel

      - name: "Build ${{ matrix.pjrt.target }} ${{ matrix.pjrt.platform }}"
        run: |
          bazelisk \
              build \
              --disk_cache=/tmp/cache \
              ${{ matrix.pjrt.config }} --repo_env=HERMETIC_PYTHON_VERSION=3.11 \
              ${{ matrix.pjrt.bazel_target }}

      - name: Strip binary and rpath
        run: |
          strip -x -o libpjrt_cpu.dylib ${{ matrix.pjrt.artifact }}
          install_name_tool -id '@rpath/libpjrt_cpu.dylib' libpjrt_cpu.dylib

      - name: Create compressed ${{ matrix.pjrt.target }} ${{ matrix.pjrt.platform }} release file
        uses: a7ul/tar-action@v1.2.0
        with:
          command: c
          cwd: .
          files: |
            ./libpjrt_cpu.dylib
          outPath: pjrt-${{ matrix.pjrt.target }}_${{ matrix.pjrt.platform }}.tar.gz

      - name: Upload ${{ matrix.pjrt.target }} ${{ matrix.pjrt.platform }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pjrt-${{ matrix.pjrt.target }}_${{ matrix.pjrt.platform }}.tar.gz
          path: pjrt-${{ matrix.pjrt.target }}_${{ matrix.pjrt.platform }}.tar.gz

  release:
    needs: ["pjrt-osx-artifacts"]
    runs-on: ["runs-on", "runner=2cpu-linux-x64"]
    steps:
      - run: rm -rf pjrt*.tar.gz
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        if: startsWith(github.ref, 'refs/tags/')
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            pjrt-cpu_darwin-amd64.tar.gz/pjrt-cpu_darwin-amd64.tar.gz
